#!/bin/bash

# this script toggles the preamp mode on an Audio4DJ or Audio8DJ usb soundcard
# this works with either one of both cards connected

# functions
helpmsg() {
    echo "a tool to toggle the preamp mode on Audio4DJ and Audio8DJ soundcards"
    echo
    echo "usage: ${0##*/} [MODE]"
    echo
    echo "preamp modes:"
    echo "line      turns off phono preamplification (use with timecode cds)"
    echo "phono     phono preamplification for vinyl playback/recording"
    echo "vc        phono preamplification for vinyl control (use with timecode vinyls)"
    echo
    echo "current mode: $current"
    echo
    exit $1;
}
errorexit() { echo "error: $1"; exit $2; }
amixertoggle() { amixer -c ${dev##* } cset numid=1 $1 > /dev/null 2&>1; }

# check for first commandline argument
[[ -z "$1" ]] && errorexit "use ${0##*/} [line|phono|vc] | [-h|--help]" 1

# determine usb soundcard
card=$(aplay -l | grep -o Audio.DJ)

# check if card is connected
[[ -z "$card" ]] && errorexit "$card is not connected" 1

# determine device number
dev=$(aplay -l | grep $card | grep -o "card .")

# get current input mode
current=$(amixer -c ${dev##* } cget numid=1 | grep ': values=.')
[[ ${current##*=} == 1 ]] && current="line"
[[ ${current##*=} == 2 ]] && current="phono"
[[ ${current##*=} == 0 ]] && current="vc"

result=0

case $1 in
    line)
        amixertoggle 1
        ;;
    phono)
        amixertoggle 2
        ;;
    vc)
        amixertoggle 0
        ;;
    -h|--help)
        helpmsg 0
        ;;
    *)
        errorexit "use ${0##*/} [line|phono|vc] | [-h|--help]" 1
        ;;
esac

result=$?

# print out error if anything went wrong
[[ $result -ne 0 ]] && errorexit "couldn't set $card input preamp" $result

