#!/bin/bash 

# this script determines show, season, episode and title
# of a given tv-show file and labels it according to the
# information fetched from epguides.com
#
# the resulting filename pattern looks like this:
# [show].S[season]E[episode].[episode title].[file extension]

# usage help
if [ "$#" != "2" ]; then
    echo "Usage: $0 filename new_path"
    exit 1
fi

# check if $1 is a regular file
if [ ! -f "$1" ]; then
    echo "$1 doesn't seem to be a regular file."
    exit 1
fi

# check if $2 is a directory
if [ ! -d "$2" ]; then
    echo "$2 doesn't seem to be an existing directory."
    exit 1
fi

FILENAME=$(basename "$1" | tr '[A-Z]' '[a-z]')  # lowercase filename
#FILENAME=$(basename "$1" | sed 's/\(.*\)/\L\1/g')  # lowercase filename
EXT=${FILENAME##*.}  # determine filetype extension
WGET=$(which wget)  # determine path to wget

# determine name of the show and set url
case $FILENAME in
    two?and?a?half?men*)
	SHOW="Two.And.A.Half.Men"
	EPURL="http://epguides.com/TwoAndAHalfMen/"
	;;
    *big?bang?theory*)
	SHOW="The.Big.Bang.Theory"
	EPURL="http://epguides.com/BigBangTheory/"
	;;
    deadwood*)
	SHOW="Deadwood"
	EPURL="http://epguides.com/Deadwood/"
	;;
    futurama*)
	SHOW="Futurama"
	EPURL="http://epguides.com/Futurama/"
	;;
    *boondocks*)
	SHOW="The.Boondocks"
	EPURL="http://epguides.com/Boondocks/"
	;;
    *boardwalk?empire*)
	SHOW="Boardwalk.Empire"
	EPURL="http://epguides.com/BoardwalkEmpire/"
	;;
    breaking?bad*)
	SHOW="Breaking.Bad"
	EPURL="http://epguides.com/BreakingBad/"
	;;
    dexter*)
	SHOW="Dexter"
	EPURL="http://epguides.com/Dexter/"
	;;
    american?dad*)
	SHOW="American.Dad"
	EPURL="http://epguides.com/AmericanDad/"
	;;
    family?guy*)
	SHOW="Family.Guy"
	EPURL="http://epguides.com/FamilyGuy/"
	;;
    *cleveland?show*)
	SHOW="The.Cleveland.Show"
	EPURL="http://epguides.com/ClevelandShow/"
	;;
    the?simpsons*)
	SHOW="The.Simpsons"
	EPURL="http://epguides.com/Simpsons/"
	;;
    star.trek.the.next.generation*)
	SHOW="Star.Trek.The.Next.Generation"
	EPURL="http://epguides.com/StarTrekTheNextGeneration/"
	;;
    star.trek.the.animated.series*)
	SHOW="Star.Trek.The.Animated.Series"
	EPURL="http://epguides.com/StarTrekTheAnimatedSeries/"
	;;
    star?trek*)
	SHOW="Star.Trek"
	EPURL="http://epguides.com/StarTrek/"
	;;
    south?park*)
	SHOW="South.Park"
	EPURL="http://epguides.com/SouthPark/"
	;;
    treme*)
	SHOW="Treme"
	EPURL="http://epguides.com/Treme/"
	;;
    justified*)
	SHOW="Justified"
	EPURL="http://epguides.com/Justified/"
	;;
    *)
	echo "Whut ? The show is unknown."
	exit 1
	;;
esac

# extract numbers of season and episode from the filename
SEASEP=$(echo $FILENAME | grep -oE '(s|\W)[0-9]+(e|x)[0-9]+')

if [ -n $SEASEP ]; then
    SEASON=$(echo $SEASEP | grep -oP '[0-9]+(?=x|e)' | sed 's/^0\+//g')
    EPISODE=$(echo $SEASEP | grep -oP '(?<=x|e)[0-9]+')
else
    echo "Could not find a valid season/episode pattern."
    exit 1
fi

# prefix single digit episodes with a "0" (e.g.: E03)
EPISODE=$(printf '%02d' $((10#$EPISODE)))

# fetch episode list and save to file
LIST="/tmp/$SHOW.list"
$WGET -q $EPURL -O $LIST

# regex episode title to taste
#EPTIT=$(wget -q "http://services.tvrage.com/tools/quickinfo.php?show=StarTrekTheAnimatedSeries&ep=${SEASON}x$EPISODE" -O - | \
#    grep -oP '(?<=^Episode\ Info@.....\^).*(?=\^[0-9]+)' | \
EPTIT=$(cat $LIST | grep -E "\s$SEASON-$EPISODE" | \
    sed -r "s/^[^>]*[0-9]*'>//;\
	    s/<\/a.*$//;\
	    s/\b(.)/\U\1/g;\
	    s/[,;:\?\!]//g;\
	    s/\&/And/g;\
	    s/\.\ /\ /g;\
	    s/'(.)/'\L\1/g;\
	    s/\ /./g")


# prefix single digit seasons with a "0" (e.g.: S05)
SEASON=$(printf '%02d' $((10#$SEASON)))

# concatenate the filename pattern
NEWTIT="$SHOW.S${SEASON}E$EPISODE.$EPTIT.$EXT"

# move and rename the file
mv -v "$1" "$2"/$NEWTIT

# clean up
rm $LIST

exit 0
